{"version":3,"file":"passport.js","names":["Strategy","JwtStrategy","ExtractJwt","models","Users","User","opts","jwtFromRequest","fromAuthHeaderAsBearerToken","secretOrKey","process","env","JWT_SECRET_KEY","module","exports","passport","use","jwt_payload","done","findAll","where","id","then","user","length","catch","err","console","log"],"sources":["../../src/config/passport.js"],"sourcesContent":["import { Strategy as JwtStrategy, ExtractJwt } from \"passport-jwt\";\nimport models from \"../models\";\n\nconst Users = models.User;\n\nconst opts = {};\nopts.jwtFromRequest = ExtractJwt.fromAuthHeaderAsBearerToken();\nopts.secretOrKey = process.env.JWT_SECRET_KEY;\n// opts.issuer = 'accounts.examplesoft.com';\n// opts.audience = 'yoursite.net';\n\n// create jwt strategy\nmodule.exports = (passport) => {\n  passport.use(\n    new JwtStrategy(opts, (jwt_payload, done) => {\n      Users.findAll({ where: { id: jwt_payload.id } })\n        .then((user) => {\n          if (user.length) {\n            return done(null, user[0]);\n          }\n          return done(null, false);\n        })\n        .catch((err) => console.log(err));\n    })\n  );\n};\n"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,WAAW,EAAEC,UAAU,QAAQ,cAAc;AAClE,OAAOC,MAAM,MAAM,WAAW;AAE9B,MAAMC,KAAK,GAAGD,MAAM,CAACE,IAAI;AAEzB,MAAMC,IAAI,GAAG,CAAC,CAAC;AACfA,IAAI,CAACC,cAAc,GAAGL,UAAU,CAACM,2BAA2B,CAAC,CAAC;AAC9DF,IAAI,CAACG,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,cAAc;AAC7C;AACA;;AAEA;AACAC,MAAM,CAACC,OAAO,GAAIC,QAAQ,IAAK;EAC7BA,QAAQ,CAACC,GAAG,CACV,IAAIf,WAAW,CAACK,IAAI,EAAE,CAACW,WAAW,EAAEC,IAAI,KAAK;IAC3Cd,KAAK,CAACe,OAAO,CAAC;MAAEC,KAAK,EAAE;QAAEC,EAAE,EAAEJ,WAAW,CAACI;MAAG;IAAE,CAAC,CAAC,CAC7CC,IAAI,CAAEC,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,MAAM,EAAE;QACf,OAAON,IAAI,CAAC,IAAI,EAAEK,IAAI,CAAC,CAAC,CAAC,CAAC;MAC5B;MACA,OAAOL,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;IAC1B,CAAC,CAAC,CACDO,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC,CACH,CAAC;AACH,CAAC","ignoreList":[]}