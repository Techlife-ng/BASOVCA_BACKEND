{"version":3,"file":"user.js","names":["bcrypt","jwt","passport","db","User","validateRegisterForm","validateLoginForm","create","req","res","errors","isValid","body","fullname","username","role","email","password","status","json","findAll","where","then","user","length","newUser","genSalt","err","salt","hash","catch","login","originalPassword","dataValues","compare","isMatch","console","log","id","payload","sign","expiresIn","token","success","exports","verifyToken","authToken","headers","split","verify","process","env","JWT_SECRET_KEY","decoded","msg","sequelize","query","result","findAllUsers","findById","params","userId","update","firstname","lastname","HospitalId","image","deleteUser","destroy"],"sources":["../../src/controllers/user.js"],"sourcesContent":["import bcrypt from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\nimport passport from 'passport';\n\nimport db from '../models';\nconst User = db.User;\n\n// load input validation\nimport validateRegisterForm from '../validation/register';\nimport validateLoginForm from '../validation/login';\n\n// create user\nconst create = (req, res) => {\n  const { errors, isValid } = validateRegisterForm(req.body);\n  let { \n    fullname, \n    username, \n    role,\n    email, \n    password,\n  } = req.body;\n\n  // check validation\n  if(!isValid) {\n    return res.status(400).json(errors);\n  }\n\n  User.findAll({ where: { email } }).then(user => {\n    if (user.length) {\n      return res.status(400).json({ email: 'Email already exists!' });\n    } else {\n      let newUser = {\n        fullname,\n        username,\n        role,\n        email,\n        password,\n      };\n      bcrypt.genSalt(10, (err, salt) => {\n        bcrypt.hash(newUser.password, salt, (err, hash) => {\n          if (err) throw err;\n          newUser.password = hash;\n          User.create(newUser)\n            .then(user => {\n              res.json({ user });\n            })\n            .catch(err => {\n              res.status(500).json({ err });\n            });\n        });\n      });\n    }\n  });\n};\n\nconst login = (req, res) => {\n  const { errors, isValid } = validateLoginForm(req.body);\n\n  // check validation\n  if(!isValid) {\n    return res.status(400).json(errors);\n  }\n\n  const { email, password } = req.body;\n\n  User.findAll({ \n    where: { \n      email \n    } \n  })\n  .then(user => {\n\n    //check for user\n    if (!user.length) {\n      errors.email = 'User not found!';\n      return res.status(404).json(errors);\n    }\n     \n    let originalPassword = user[0].dataValues.password\n\n    //check for password\n    bcrypt\n      .compare(password, originalPassword)\n      .then(isMatch => {\n        if (isMatch) {\n          // user matched\n          console.log('matched!')\n          const { id, username } = user[0].dataValues;\n          const payload = { id, username }; //jwt payload\n          // console.log(payload)\n\n          jwt.sign(payload, 'secret', { \n            expiresIn: 3600 \n          }, (err, token) => {\n            res.json({\n              success: true,\n              token: 'Bearer ' + token,\n              role: user[0].dataValues.role\n            });\n          });\n        } else {\n          errors.password = 'Password not correct';\n          return res.status(400).json(errors);\n        }\n    }).catch(err => console.log(err));\n  }).catch(err => res.status(500).json({err}));\n};\n\n\nexports.verifyToken = (req, res) => {\n  // const {verifyToken} = req.params\n  const authToken = req.headers[\"authorization\"];\n  const token = authToken.split(\" \")[1];\n  // console.log(\"dddddddd\", authToken, '`\"token\"`');\n\n  jwt.verify(token, process.env.JWT_SECRET_KEY, (err, decoded) => {\n    if (err) {\n      console.log(err, \"ERRRORRRR\");\n      return res.json({\n        success: false,\n        msg: \"Failed to authenticate token\",\n        err,\n      });\n    }\n\n    const { username, id } = decoded;\n    console.log(decoded, \"SPSPSPSPSPSPS\");\n    db.sequelize\n      .query(`SELECT *  from users  where id=\"${id}\"`)\n      .then((result) => {\n        res.json({ success: true, user: result[0][0] });\n      })\n      .catch((err) => {\n        console.log(err);\n        res.status(500).json({ status: \"failed\", err });\n      });\n  });\n};\n\n// fetch all users\nconst findAllUsers = (req, res) => {\n  User.findAll()\n    .then(user => {\n      res.json({ user });\n    })\n    .catch(err => res.status(500).json({ err }));\n};\n\n// fetch user by userId\nconst findById = (req, res) => {\n  const id = req.params.userId;\n  \n  User.findAll({ where: { id } })\n    .then(user => {\n      if(!user.length) {\n        return res.json({ msg: 'user not found'})\n      }\n      res.json({ user })\n    })\n    .catch(err => res.status(500).json({ err }));\n};\n\n// update a user's info\nconst update = (req, res) => {\n  let { firstname, lastname, HospitalId, role, image } = req.body;\n  const id = req.params.userId;\n\n  User.update(\n    {\n      firstname,\n      lastname,\n      role,\n    },\n    { where: { id } }\n  )\n    .then(user => res.status(200).json({ user }))\n    .catch(err => res.status(500).json({ err }));\n};\n\n// delete a user\nconst deleteUser = (req, res) => {\n  const id = req.params.userId;\n\n  User.destroy({ where: { id } })\n    .then(() => res.status.json({ msg: 'User has been deleted successfully!' }))\n    .catch(err => res.status(500).json({ msg: 'Failed to delete!' }));\n};\n\nexport { \n    create, \n    login, \n    findAllUsers, \n    findById, \n    update, \n    deleteUser \n}"],"mappings":"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","ignoreList":[]}