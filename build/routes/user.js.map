{"version":3,"file":"user.js","names":["passport","config","allowOnly","create","login","findAllUsers","findById","update","deleteUser","verifyToken","imageUpload","blog","module","exports","app","post","authenticate","session","get","accessLevels","admin","put","user","delete","single","req","res","file","status","json","success","error","url","path"],"sources":["../../src/routes/user.js"],"sourcesContent":["import passport from \"passport\";\nimport config from \"../config/config\";\nimport { allowOnly } from \"../services/routesHelper\";\nimport {\n  create,\n  login,\n  findAllUsers,\n  findById,\n  update,\n  deleteUser,\n  verifyToken,\n} from \"../controllers/user\";\nimport { imageUpload } from \"../config/multer\";\nimport { blog } from \"../controllers/blog\";\n\nmodule.exports = (app) => {\n  // create a new user\n  app.post(\n    \"/api/users/create\",\n    passport.authenticate(\"jwt\", { session: false }),\n    create\n  );\n\n  // user login\n  app.post(\"/api/users/login\", login);\n\n  //retrieve all users\n  app.get(\n    \"/api/users\",\n    passport.authenticate(\"jwt\", {\n      session: false,\n    }),\n    allowOnly(config.accessLevels.admin, findAllUsers)\n  );\n\n  // retrieve user by id\n  app.get(\n    \"/api/users/:userId\",\n    passport.authenticate(\"jwt\", {\n      session: false,\n    }),\n    allowOnly(config.accessLevels.admin, findById)\n  );\n\n  // update a user with id\n  app.put(\n    \"/api/users/:userId\",\n    passport.authenticate(\"jwt\", {\n      session: false,\n    }),\n    allowOnly(config.accessLevels.user, update)\n  );\n\n  // delete a user\n  app.delete(\n    \"/api/users/:userId\",\n    passport.authenticate(\"jwt\", {\n      session: false,\n    }),\n    allowOnly(config.accessLevels.admin, deleteUser)\n  );\n  app.get(\"/verify-token\", verifyToken);\n  app.post(\"/blog\", blog);\n  app.post(\"/blog-pictures\", imageUpload.single(\"media\"), (req, res) => {\n    // console.log(\"FILE\", req.file);\n    if (!req.file) {\n      return res\n        .status(400)\n        .json({ success: false, error: \"No file uploaded\" });\n    }\n\n    // The file is already uploaded to Cloudinary by the time this callback is invoked\n    res.json({ success: true, url: req.file.path });\n  });\n};\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,UAAU;AAC/B,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SACEC,MAAM,EACNC,KAAK,EACLC,YAAY,EACZC,QAAQ,EACRC,MAAM,EACNC,UAAU,EACVC,WAAW,QACN,qBAAqB;AAC5B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,IAAI,QAAQ,qBAAqB;AAE1CC,MAAM,CAACC,OAAO,GAAIC,GAAG,IAAK;EACxB;EACAA,GAAG,CAACC,IAAI,CACN,mBAAmB,EACnBf,QAAQ,CAACgB,YAAY,CAAC,KAAK,EAAE;IAAEC,OAAO,EAAE;EAAM,CAAC,CAAC,EAChDd,MACF,CAAC;;EAED;EACAW,GAAG,CAACC,IAAI,CAAC,kBAAkB,EAAEX,KAAK,CAAC;;EAEnC;EACAU,GAAG,CAACI,GAAG,CACL,YAAY,EACZlB,QAAQ,CAACgB,YAAY,CAAC,KAAK,EAAE;IAC3BC,OAAO,EAAE;EACX,CAAC,CAAC,EACFf,SAAS,CAACD,MAAM,CAACkB,YAAY,CAACC,KAAK,EAAEf,YAAY,CACnD,CAAC;;EAED;EACAS,GAAG,CAACI,GAAG,CACL,oBAAoB,EACpBlB,QAAQ,CAACgB,YAAY,CAAC,KAAK,EAAE;IAC3BC,OAAO,EAAE;EACX,CAAC,CAAC,EACFf,SAAS,CAACD,MAAM,CAACkB,YAAY,CAACC,KAAK,EAAEd,QAAQ,CAC/C,CAAC;;EAED;EACAQ,GAAG,CAACO,GAAG,CACL,oBAAoB,EACpBrB,QAAQ,CAACgB,YAAY,CAAC,KAAK,EAAE;IAC3BC,OAAO,EAAE;EACX,CAAC,CAAC,EACFf,SAAS,CAACD,MAAM,CAACkB,YAAY,CAACG,IAAI,EAAEf,MAAM,CAC5C,CAAC;;EAED;EACAO,GAAG,CAACS,MAAM,CACR,oBAAoB,EACpBvB,QAAQ,CAACgB,YAAY,CAAC,KAAK,EAAE;IAC3BC,OAAO,EAAE;EACX,CAAC,CAAC,EACFf,SAAS,CAACD,MAAM,CAACkB,YAAY,CAACC,KAAK,EAAEZ,UAAU,CACjD,CAAC;EACDM,GAAG,CAACI,GAAG,CAAC,eAAe,EAAET,WAAW,CAAC;EACrCK,GAAG,CAACC,IAAI,CAAC,OAAO,EAAEJ,IAAI,CAAC;EACvBG,GAAG,CAACC,IAAI,CAAC,gBAAgB,EAAEL,WAAW,CAACc,MAAM,CAAC,OAAO,CAAC,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;IACpE;IACA,IAAI,CAACD,GAAG,CAACE,IAAI,EAAE;MACb,OAAOD,GAAG,CACPE,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAmB,CAAC,CAAC;IACxD;;IAEA;IACAL,GAAG,CAACG,IAAI,CAAC;MAAEC,OAAO,EAAE,IAAI;MAAEE,GAAG,EAAEP,GAAG,CAACE,IAAI,CAACM;IAAK,CAAC,CAAC;EACjD,CAAC,CAAC;AACJ,CAAC","ignoreList":[]}